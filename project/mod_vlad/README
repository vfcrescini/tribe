-------------------------------------------------------------------------------
mod_vlad: Apache Module interface for VLAD
Build/Use Instructions
                                                                                
Vino Fernando Crescini  <jcrescin@cit.uws.edu.au>
-------------------------------------------------------------------------------

REQUIREMENTS :

  - GNU build system (GCC, GNU Make, GNU Bison and GNU Flex)
  - libvlad 0.9.5 or newer headers + lib (must be compiled with --with-smodels 
    and --enable-wrapper)
  - Apache 2.0.45 or newer (headers)

BUILD INSTRUCTIONS :

  1. From the toplevel source directory, run ./configure

    $ ./configure

    The following configure options are available :

    --with-libvlad=<path-to-libvlad>

      mod_vlad needs the libvlad library and header files to compile. Unless 
      libvlad is installed in a system default location (/usr or /usr/local),
      this option must be used to specify the location of libvlad. Usually,
      it is safe to set the location to the full path of dist directory in
      the libvlad build.

    --with-apache=<path-to-apache>

      As with the --with-libvlad option, this can be used to specify the
      location of the Apache BUILD directory if it is not installed in a
      system default location.

    --enable-debug

      Compile with -g and enable printing of debug messages.

    --enable-strip

      Runs strip against the executable file to reduce disk footprint size.

    --help
                                                                                
       Suppress normal configuration and output help message.
                                                                                
     --version
                                                                                
       Suppress normal configuation and output version number.

  2. Then run gmake :

    $ gmake

INSTALL INSTRUCTIONS :

  1. If Apache apxs is installed, run the following command in the mod_vlad
     toplevel source directory :

    $ <path-to-apache>/bin/apxs -i -a -n modvlad mod_vlad.so

  2. Without Apache apxs, copy mod_vlad.so into the Apache modules directory :

    $ cp mod_vlad.so <path-to-apache>/modules

CONFIGURATION :

  To activate the module the following directives must be added into
  Apache's httpd.conf :

    Global Area :

      LoadModule modvlad_module modules/mod_vlad.so

    Directory Area :

      VladFiles "user-file" "policy-file"

FILES :

  user-file

    The user file is a list of user-password pairs that are used by mod_vlad
    to authenticate users. A special user "administrator" must be present
    to access mod_vlad's policy manipulator.

    The user file is generated by Apache's htpasswd program. See htpasswd(1)
    for details on how to use this program to generate a user file.

  policy-file

    The policy file contains the rules by which mod_vlad bases its decisions
    to grant or deny user authorizations. The policy file must contain
    group declarations, initial state atoms, constraints and transformations.
    Note that subjects are all users (except administrator, see below) listed
    in the user file; access-rights are the basic HTTP methods (GET, POST, PUT,
    etc.); and objects are the files and directories that make up the directory
    structure in which mod_vlad was activated. 

    Below are the statement syntax for the policy file:

     group sub|acc|obj <ident>[,...];

     initially <expression>;

     always <expression> [implied by <expression>] [with absence <expression>];

     <trans-ident>([<var>[,...]]) causes <expression> if <expression>;

    Where :

      <expression> = [!]<atom>[,...]

      <atom> = holds(<subject-ident>,<access-ident>,<object-ident>) |
               memb(<ident>,<group-ident>) |
               subst(<group-ident>,<group-ident>)

      <ident> = [a-zA-Z0-9_/]{1,128}

ADMINISTRATOR PRIVILEGES:

  The "administrator" user can access the transformation sequence manipulator
  interface by accessing the following URL in a browser :

    http://<server>[:port]/<policy-directory>/.admin

  For example, to access the manipulator in server www.magrathea.com for the
  policy in the document root :

    http://www.magrathea.com/.admin

  Note that the "administrator" user, although listed in the user file, should
  not be used in the policy file. When logged in as "administrator", mod_vlad
  always grants access to the requested resource (ie. authorization is
  always unconditionally granted to any request made by "administrator").
