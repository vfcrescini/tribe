TARGET = lparse.exe
OBJS = debug.obj error.obj extern.obj instance.obj iterate.obj lex.obj \
       library.obj list.obj literal.obj array.obj main.obj parse.obj \
       parsetree.obj predicate.obj rule.obj symbol.obj term.obj \
       graph.obj smodels.obj sm_smodels.obj

ENVIRON = WIN32
BINDING = STATIC
THREAD = MULTI
BMODE = RELEASE
CPP        = bcc32
CPP32      = cpp32
LIBRARIAN  = tlib /P128
LINKER     = ilink32
RC         = brc32
ENVNAME    =
CCLINKOPT = -lGn

!if $(THREAD) == MULTI
CCLINKOPT = $(CCLINKOPT) -tWM
LIBSUF=mt
!else

CCLINKOPT = $(CCLINKOPT) -tWM-
LIBSUF=
!endif

DEFOPTS =
!if $(BINDING) == DLL
DEFOPTS=$(DEFOPTS) -tWCR
TARGSUF=R
LIBSUF=$(LIBSUF)i
!else
DEFOPTS = $(DEFOPTS) -tWC
LIBSUF=$(LIBSUF)
TARGSUF=
!endif

PCHROOT=stl_pch
CCOPTS = -w- -jb -j1 -Hc -H=$(PCHROOT).csm

#Compile flags:
CPPFLAGS= $(CCOPTS) $(DBGOPT)  $(ENVOPTS) $(DEFOPTS) $(THROPTS) $(CCLINKOPT)
LINKFLAGS= -Gn -Gi -Tpd -aa -L$(MAKEDIR)\..\lib -x
LINKSTARTUP= c0d32.obj
LINKLIBS=import32.lib cw32$(LIBSUF).lib
RCFLAGS= -r -i$(MAKEDIR)\..\include;$(MAKEDIR)\..\include\windows
all : $(TARGET)

lparse.exe : $(OBJS)
	$(CPP) $(CPPFLAGS) $(OBJS)
	move debug.exe lparse.exe

.cc.obj:
	$(CPP) -P $(CPPFLAGS) -c {$? }

.obj.exe:
	$(CPP) $(CPPFLAGS) $<

clean :
	del *.obj


array.obj: array.cc ../config.h global.h defines.h extern.h array.h \
 debug.h error.h term.h predicate.h list.h literal.h instance.h \
 iterate.h rule.h graph.h
debug.obj: debug.cc ../config.h debug.h global.h defines.h extern.h \
 error.h term.h
error.obj: error.cc ../config.h error.h term.h global.h defines.h \
 extern.h debug.h list.h symbol.h
extern.obj: extern.cc global.h ../config.h defines.h extern.h instance.h \
 debug.h
graph.obj: graph.cc ../config.h predicate.h global.h defines.h extern.h \
 list.h literal.h term.h instance.h debug.h iterate.h rule.h array.h \
 graph.h error.h
instance.obj: instance.cc ../config.h error.h term.h global.h defines.h \
 extern.h instance.h debug.h symbol.h predicate.h list.h literal.h \
 iterate.h rule.h array.h graph.h
iterate.obj: iterate.cc ../config.h global.h defines.h extern.h \
 iterate.h instance.h debug.h error.h term.h
lex.obj: lex.cc ../config.h parsetree.h debug.h global.h defines.h \
 extern.h term.h literal.h list.h instance.h iterate.h rule.h array.h \
 symbol.h parse.h error.h
library.obj: library.cc ../lib/lparse.h ../config.h library.h defines.h \
 symbol.h debug.h error.h term.h global.h extern.h
list.obj: list.cc ../config.h list.h error.h term.h global.h defines.h \
 extern.h debug.h rule.h literal.h instance.h iterate.h array.h \
 predicate.h graph.h parsetree.h library.h
literal.obj: literal.cc ../config.h debug.h literal.h defines.h term.h \
 global.h extern.h list.h instance.h iterate.h parsetree.h rule.h \
 array.h symbol.h predicate.h graph.h error.h
main.obj: main.cc ../config.h global.h defines.h extern.h symbol.h \
 debug.h library.h parsetree.h term.h literal.h list.h instance.h \
 iterate.h rule.h array.h graph.h predicate.h error.h
parse.obj: parse.cc ../config.h parsetree.h debug.h global.h defines.h \
 extern.h term.h literal.h list.h instance.h iterate.h rule.h array.h \
 symbol.h error.h
parsetree.obj: parsetree.cc ../config.h parsetree.h debug.h global.h \
 defines.h extern.h term.h literal.h list.h instance.h iterate.h \
 rule.h array.h predicate.h graph.h symbol.h error.h
predicate.obj: predicate.cc ../config.h predicate.h global.h defines.h \
 extern.h list.h literal.h term.h instance.h debug.h iterate.h rule.h \
 array.h graph.h symbol.h error.h
rule.obj: rule.cc ../config.h global.h defines.h extern.h rule.h list.h \
 literal.h term.h instance.h debug.h iterate.h array.h graph.h \
 symbol.h predicate.h error.h
symbol.obj: symbol.cc ../config.h library.h defines.h debug.h symbol.h \
 term.h global.h extern.h list.h error.h
term.obj: term.cc ../config.h term.h global.h defines.h extern.h \
 symbol.h debug.h parsetree.h literal.h list.h instance.h iterate.h \
 rule.h array.h error.h graph.h
