I have a couple of ideas that will probably be included in lparse some
day. They include:

1. Extended support for data types. I vision system like one that is
   used in programming language Scheme, that is, user may freely mix
   normal integers, floating point numbers and bignums and the system
   takes care of rest. However, as this requires rewriting of quite
   large parts of lparse code this will not happen very soon.

2. Some sort of unified method for setting attributes for predicates,
   like marking them hidden, setting weights, and like. This feature
   would prevent ``keyword-pollution'', that has been threatening
   lparse lately. The feature will be implemented in such way that it
   will be easy to convert current programs into new format
   automatically.

3. A new declaration that would allow one to define implicit domain
   predicates for variables. For example, it would be possible to say
   something like this: ``in each rule variable 'I' will have
   domain 'time(I)' ''.

4. Possibility of using predicates that occur as head of a special
   rule as domain predicates. 
