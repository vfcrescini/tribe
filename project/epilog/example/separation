/* 
 * Dynamic Separation of Duty Example
 * Vino Crescini  <jcrescin@cit.uws.edu.au>
 */

ident sub S;
ident sub-grp Officer;
ident acc Submitable, Evaluateable, Approveable;
ident acc Submit, Approve, Evaluate;
ident obj O;

/* initial facts */

initially memb(S, Officer);
initially 
  holds(S, Submitable, O) &&
  holds(S, Evaluateable, O) &&
  holds(S, Approveable, O);

/* transformations */

trans Request_Submit(X, Y) 
  causes
    holds(X, Submit, Y) &&
    !holds(X, Evaluateable, Y) &&
    !holds(X, Approveable, Y)
  if
    memb(X, Officer) &&
    holds(X, Submitable, Y);

trans Request_Evaluate(X, Y)
  causes
    holds(X, Evaluate, Y) &&
    !holds(X, Approveable, Y) &&
    !holds(X, Submitable, Y)
  if
    memb(X, Officer) &&
    holds(X, Evaluateable, Y);

trans Request_Approve(X, Y)
  causes
    holds(X, Approve, Y) &&
    !holds(X, Evaluateable, Y) &&
    !holds(X, Submitable, Y)
  if
    memb(X, Officer) &&
    holds(X, Approveable, Y);  

/* queries */

query holds(S, Submit, O) after Request_Submit(S, O);
query holds(S, Evaluate, O) after Request_Submit(S, O);
query holds(S, Approve, O) after Request_Submit(S, O);

query holds(S, Submit, O) after Request_Evaluate(S, O);
query holds(S, Evaluate, O) after Request_Evaluate(S, O);
query holds(S, Approve, O) after Request_Evaluate(S, O);

query holds(S, Submit, O) after Request_Approve(S, O);
query holds(S, Evaluate, O) after Request_Approve(S, O);
query holds(S, Approve, O) after Request_Approve(S, O);

query holds(S, Submit, O) 
  after 
    Request_Approve(S, O), 
    Request_Evaluate(S, O),
    Request_Submit(S, O);
