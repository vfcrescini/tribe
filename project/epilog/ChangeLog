2002-10-26  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/simplelist.c :
	* datastruct/simplelist.h :

	  - Added errorcodes for return values.

	  - Some cleanups.

	* exp/comp_exp.c :
	* exp/comp_exp.h :
	* exp/gnd_exp.c :
	* exp/gnd_exp.h :

	  - Removed unnecessary delete function. May have caused
	    inconsistencies in the expressions.

2002-10-20  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/gnd_exp.c :

	  - Fixed the error that causes the check of whether the
	    negation of an atom is already present to fail.

	  - Fixed bug that adds an atom even though its negation is
	    already there.

	  - add function now allows an atom to be replaced by its negation
	    IF AND ONLY IF it is not implied by any other atom.

	* exp/gnd_atom.h :
	* exp/gnd_atom.c :

	  - Changed copy function to simply copy the atom without
	    allocating memory (analogous strcpy).

	  - Added dup function to allocate memory and copy the atom.
	    (analogous to strdup).

	* exp/gnd_exp.c :

	  - eval_atom function now only checks if the atom is a logical
	    consequence of the other atoms in the expression. It no
	    longer checks if the atom is explicitly stated in the
	    expression.

2002-10-19  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/simplelist.c :
	* datastruct/simplelist.h :
	* datastruct/stringlist.c :
	* exp/comp_exp.c :
	* exp/gnd_exp.c :
	* ident/identlist.c :
	* ident/symtab.c :
	* trans/translist.c :
	* trans/transtab.c :

	  - Added a purge function in simplelist.

2002-10-15  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/stringlist.c :
	* exp/comp_exp.c :
	* exp/gnd_exp.c :
	* ident/identlist.c :
	* ident/symtab.c :
	* trans/translist.c :
	* trans/transtab.c :

	  - Re-initialised lists after they have been purged.


2003-10-13  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/sample :
	* example/sample :
	* example/geography:
	
	  - Moved test files to example directory.

	* exp/gnd_exp.c :

	  - Added get_subgroups, get_non_subgroups, get_supergroups,
	    get_non_supergroups, get_elements and get_non_elements functions.

	* exp/expression.h :
	* exp/comp_atom.h :
	* exp/gnd_atom.h :
	
	  - Added some convenience macros.
	  
	* exp/comp_exp.c : 
	* exp/gnd_exp.c :
	* parser/parser.y :

	  - Used convenience macros.

2002-10-12  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/gnd_exp.c :

	  - Separated eval atoms (holds, memb and subst) into
	    separate functions.

	* exp/comp_atom.c :
	* exp/comp_atom.h :
	* exp/comp_exp.c :
	* exp/gnd_atom.c :
	* exp/gnd_atom.h :
	* exp/gnd_exp.c :

	  - Changed create atom functions so that they do not malloc. They
	    now assume that space is always available.

	  - Added a macro to malloc.
	
	* parser/parser.y :

	  - Some cleanups. Now uses the create atom functions instead of
	    manually assigning values to each structure member.

2002-10-07  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/simplelist.c :
	* datastruct/simplelist.h :
	* datastruct/stringlist.c :
	* datastruct/stringlist.h :
	* exp/comp_atom.c :
	* exp/comp_atom.h :
	* exp/comp_exp.c :
	* exp/gnd_atom.c :
	* exp/gnd_atom.h :
	* exp/gnd_exp.c :
	* exp/name.c :
	* exp/name.h :
	* ident/ident.c :
	* ident/ident.h :
	* ident/identlist.c :
	* ident/symtab.c :
	* parser/parser.y :
	* trans/transdef.c :
	* trans/transdef.h :
	* trans/translist.c :
	* trans/transref.c :
	* trans/transref.h :
	* trans/transtab.c :

	  - Changed destroy function to return void. If free()
	    fails, it will segfault anyway.

	  - Changed purge functions to return void. In all cases
	    we do not care if this succeeds or not.

	  - Changed init function to return void. It cannot fail 
	    anyway.

	  - Changed length function to return the length
	    instead of passing it through a variable reference


	* ident/symtab.c :
	* trans/transtab.c :

	  - Changed internal lists to static.

2002-10-04  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* VERSION :
	* main/epilog.c :

	  - Updated version to 0.9.0.

	* main/Makefile :

	  - Now makes a symlink to executable in top directory.

	* main/epilog.c :

	  - Added getopt options: -h and -v (help and version, resp).

	  - Added ability to read from file given filename.

2002-10-02  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/parser.y :

	  - Fixed grammar bug in access and object group identifier
	    declarations.

	  - Fixed reversed parameters in the transformation
	    definition handler.

	  - Added code to evaluate truth value of an expression after
	    transformations.

	* exp/gnd_exp.c :

	  - Fixed a little typo in the eval_atom function that causes
	    false to be returned even when true.

	  - Added a purge function that will not delete the elements
	    of the list, but the list itself. Used to free the list
	    returned by simplelist_get_data.

	  - Fixed pointer problem in gnd_exp_group function.

	  - Fixed uninitialised list problems in eval_atom.

	* datastruct/stringlist.c :
	* exp/name.c :
	* ident/ident.c :
	* trans/transdef.c :
	* trans/transref.c :

	  - Changed all string mallocs to strlen + 1

	* datastruct/simplelist.c :

	  - Copy function : reversed the order in which items are entered in 
	    the new list. Add will prepend in the beginning but to preserve
	    the original order, we must append in the end.

	  - Fixed get_index and index functions so that they will properly
	    retrieve/give in the right order.

2002-09-26  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* trans/transtab.c :
	* trans/transtab.h :

	  - Added transform function in transtab. Takes an initial expression,
	    the tranformation name with the variable replacements then
	    gives out the resulting expression.

	* exp/comp_exp.c :

	  - Fixed pointer bug.

	* exp/gnd_exp.c :
	* exp/gnd_exp.h :

	  - Added a copy function to copy a ground expression.

	* datastruct/simplelist.c :
	* datastruct/simplelist.h :

	  - Added a copy function to copy the contents of one list to
	    another. 

2002-09-25  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/comp_exp.c :

	  - Added check in replace function to ensure that the
	    varlist and the identlist are of equal length.

2002-09-17  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/gnd_exp.c :
	* exp/gnd_exp.h :

	  - Renamed get_superset to group.

	  - Added a function that checks whether a given expression is true,
	    false or unknown in a given expression.

	* exp/expression.h :

	  - Added res_type (true, false unknown).

	* ident/identlist.c :
	* ident/indetlist.h :

	  - Added length function.

	* exp/gnd_exp.c :

	  - Added a get_superset function to get a list of identifiers that
	    are supergroups of a given identifier.

2002-09-14  Vino Crescini  <jcrescin@cit.uws.edu.au>


	* exp/comp_exp.c :
	* exp/comp_exp.h :

	  - Added a replace function that takes a non-ground expression,
	    a list of variables and a list of replacement identifiers and
	    gives a ground expression where the variables are replaced
	    with the corresponding identifier.

2002-09-11  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/simplelist.c :
	* datastruct/simplelist.h :
	* datastruct/stringlist.c :
	* datastruct/stringlist.h :

	  - Added an index function that returns the index of the first
	    node that matches the given data.

2002-09-08  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/expression.h :

	  - Some definitions/macros common between ground and non-ground
	    atoms/expressions.

	* exp/atom.c :
	* exp/atom.h :
	* exp/expression.c :
	* exp/expression.h :
	* exp/gnd_atom.h :
	* exp/gnd_exp.h :
	* exp/comp_atom.h :
	* exp/comp_exp.h :

	  - Separated the atom and expression files into ground and comp
	    non-ground groupings. Very few differences between the two,
	    but separating them ensures integrity, and this will make it
	    easier to evaluate policy propositions.

	* ident/ident.h :

	  - Added string macro.

	* exp/Makefile :
	* parser/parser.y :
	* parser/scanner.l :
	* trans/transdef.c :
	* trans/transdef.h :

	  - Changed to use gnd/comp exp/atom.

2002-09-07  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/parser.y :
	* parser/scanner.l :

	  - Changes to make the changes below work.

	* Makefile :
	* test/Makefile :
	* test/datastruct_test.c :

	  - Removed test program.

	* trans/Makefile :
	* trans/transdef.c :
	* trans/transdef.h :
	* trans/transdeflist.c :
	* trans/transdeflist.h :
	* trans/transreflist.c :
	* trans/transreflist.h :

	  - Renamed transdeflist with transtab. Also defined the list
	    internally.

	  - Renamed transreflist with translist.

	* ident/Makefile :
	* ident/identlist.c :
	* ident/identlist.h :
	* ident/symtab.c :
	* ident/symtab.h :

	  - Separated the symbol table from identlist. Now the small
	    differences between the two are separated for good. See symtab.h
	    for a list of differences.

2002-09-06  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* simplelist.c :
	* simplelist.h :

	  - The function simplelist_del_data now deletes ALL instances
	    of the given data from the list. Before this change, only the
	    first instance (from the top) is deleted.

	  - The function simplelist_get_data now gives another list containing
	    pointers to all the nodes from the first list that matches the
	    given data. API CHANGE.

	* stringlist.c :
	* stringlist.h :

	  - Took out unused compare function.

2002-09-05  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/expression.c :
	* exp/expression.h :
	* ident/identlist.c :
	* ident/identlist.h :
	* trans/transdef.c :
	* trans/transdef.h :
	* trans/transref.c :
	* trans/transref.h :

	  - Took out unused cmp functions.

	* parser/parser.y :

	  - Cleanup.

2002-09-02  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* trans/Makefile :
	* trans/transdef.h :
	* trans/transref.c :
	* trans/transdef.c :
	* trans/transref.h :
	* trans/transdeflist.c :
	* trans/transdeflist.h :
	* trans/transreflist.c :
	* trans/transreflist.h :

	  - Removed trans.* translist.* and changed it to transref/list and
	    transdef/list. transdef/list holds transformation definitions
	    (name, varlist, precond and postcond). transref/list is a temp
	    storage structure for policy statements to pass transformation
	    references along with their identifiers.

	* ident/identlist.c :
	* ident/identlist.h :

	  - Added function to purge the list, but not free the identifiers.
	    The other function identlist_purge_all purges and frees the
	    identifiers.

	  - Added a compare function to return 0 if the 2 input lists are
	    exactly the same.

	  - Made another add function. one that does not allocate new space.

	* parser/parser.y :
	* parser/scanner.l :
	* trans/Makefile :
	* trans/trans.c :
	* trans/trans.h :

	  - All transformation declarations are now stored in the
	    trans list.

	  - Cleanup.

	* trans/translist.c :
	* trans/translist.h :

	  - List of trans structures.

2002-09-01  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* trans/trans.c :
	* trans/trans.h :

	  - Created structure to hold tranformation definitions. Holds
	    a list of variables, precondition expression and postcondition
	    expression.

	* Makefile :
	* main/Makefile :
	* trans/Makefile :
	
	  - Enabled the build of the trans library.

	* datastruct/stringlist.c :
	* datastruct/stringlist.h :
	* exp/expression.c :
	* exp/expression.h :

	  - Added a cmp function that compares NOT the individual data but
	    the list itself as a whole.

	* ident/identlist.c :
	* ident/identlist.h :
	* parser/parser.y :

	  - Changed the API of identlist to include an identlist variable
	    instead of a statically-defined variable in the library. This
	    will allow us to use the identlist for purposes other than
	    that of the symbol table.

	* docs/bnf.txt :
	* parser/parser.y :

	  - Changed all recursive rules from left-recursive to right-
	    recursive. Less efficient, but at parsed in the right order.
	    Now data in lists appear in the order in which they appear in
	    the input file.

2002-08-31  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/Makefile :
	* exp/name.c :
	* exp/name.h :

	  - Added a structure to store either a literal or a variable.
	    
	* exp/atom.c :
	* exp/atom.h :
	* ident/ident.c :
	* ident/ident.h :
	* parser/parser.y :
	* parser/scanner.l :

	  - Changed to use new name structure.

	* datastruct/Makefile :
	* datastruct/index.c :
	* datastruct/index.h :
	* datastruct/indexedlist.c :
	* datastruct/indexedlist.h :

	  - Removed unused files.

2002-08-29  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* README :
	* VERSION :

	  - Some mandatory files added.

2002-08-27  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* main/epilog.c :
	* parser/parser.h :
	* parser/parser.y :

	  - Changed all debug printfs to fprintf to stderr.

	  - Defined yyerr to allow a unified redirection.

	* exp/atom.c :
	* exp/atom.h :
	* ident/ident.h :

	  - Simplified macros by taking the base structure as the parameter,
	    instead of the unsigned ints.

	  - Cleanups.

	* parser/parser.y :
	* exp/expression.c :

	  - Before adding an atom into an expression, first perform a few
	    checks:

	    - Is the atom already in the expression ?
	    - Is the entire expression already false ?
	    - Is the negation of the new atom already in the expression ?

	* exp/expression.c :

	  - Adding atoms to an expression will now be checked first.
	    If the atom is aleady there, simply accept silently, if
	    the negation is already in, replace the whole expression
	    with a constant FALSE.

	* parser/parser.y :

	  - Added debug code to dump the contents of the initial expression.

2002-08-26  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/atom.c:
	* exp/atom.h:

	  - Modified atom checks to allow variables in identifiers.

	* exp/compexp.h :
	* exp/compatom.h :

	  - Structures for complex (non-ground) terms. Includes ground
	    expression plus a variable list.

	* ident/ident.h:

	  - Added variable type.

	* parser/parser.y:
	* parser/scanner.l:

	  - Defined a function exit_error to be used instead of yyerror. 
	    Makes a call to exit.

	  - Uses stringlist to store variable definitions at the beginning of
	    a transformation definition.

	  - Uses compexp/compatom to store expressions with variables for
	    complex (non-ground) atoms and expressions.

	* datastruct/stringlist.c :
	* datastruct/stringlist.h :

	  - Added a simple list wrapper for strings.

	* trans/Makefile :
	* trans/varlist.c :
	* trans/varlist.h :

	  - Added a structure to hold a list of variables (name + identifier
	    mapping).

	* ident/identlist.c :

	  - More cleanups. Declare them as ident_type instead of ident_type *
	    to avoid memory allocation/dealocation.

2002-08-25  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/parser.y :

	  - Some cleanups.

	  - Ensured that global lists get destroyed before exit, even on
	    error.

2002-08-23  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/bnf.txt :
	* main/epilog.c :
	* parser/parser.h :
	* parser/parser.y :

	  - Moved list initialisation from main file to parser. Made
	    dummy rules at the beginning and end to initialise and
	    destroy lists.

	* Makefile :

	  - Top level makefile now cleans all dirs even without the debug
	    variable defined.

	* datastruct/Makefile :
	* exp/Makefile :
	* ident/Makefile :
	* main/Makefile :
	* parser/Makefile :
	* test/Makefile :

	  - When the debug symbol is defined, -O2 will not be included in
	    CFLAGS. Also -g will be included to allow actual debugging.

	* docs/bnf.txt :
	* parser/parser.y :

	  - Again separated expressions into ground_exp and comp_exp.
	    This allows the parser to accept variables and have strict
	    identifier checking.

	* docs/sample :

	  - Enabled transformation statements.

2002-08-22  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/simplelist.c :

	  - Some cleanup.

	* exp/expression.c :
	* ident/identlist.c :

	  - Fixed bug in purge functions. Purge will now always delete the
	    first element until the list is empty.

	* parser/parser.y :

	  - Cleanups and simplifications.

2002-08-19  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* datastruct/Makefile :
	* datastruct/index.h :
	* exp/Makefile :
	* ident/Makefile :
	* ident/identlist.c :
	* ident/identlist.h :
	* main/Makefile :
	* main/epilog.c :
	* parser/Makefile :
	* parser/parser.h :
	* parser/parser.y :

	  - Fixes for strict prototypes.

	* exp/atom.c :

	  - Fixed macros. They return non-zero if true.

	* exp/expression.c :
	* exp/expression.h :

	  - Added wrapper functions length and get.

	* main/epilog.c :
	* parser/parser.h :
	* parser/parser.y :

	  - Added yywarn.

	  - Expressions declared using the initially statement are now
	    stored correctly into an initial state expression.

	* Makefile :

	  - Added exp directory.

	* exp/Makefile :

	  - Added expression.

	* ident/identlist.c :
	* ident/identlist.h :

	  - Changed identlist_get(char *name, ident_type *ident) to
	    int identlist_get(char *name, ident_type **ident).

	* main/Makefile :
	* main/epilog.c :

	  - Linked against libexp and initialise initial state list.

	* parser/parser.y :
	* parser/scanner.l :

	  - Added code to properly store expressions.

	  - Renamed some tokens for clarity.

	* docs/bnf.txt :

	  - Renamed some tokens for clarity.

	* docs/sample :

	  - Disabled tranformations for now until the parser can properly
	    handle variables.

2002-08-18  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/expression.h :
	* exp/expression.c :

	  - Added a list of atoms (expression). Represents a conjuntion
	    of logical atoms.

	* exp/atom.h :
	* exp/atom.c :

	  - Added a copy function.

2002-08-16  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* exp/Makefile :
	* exp/atom.h :
	* exp/atom.c :

	  - Added atom.

	* parser/parser.y :
	* parser/scanner.l :

	  - Identifier token is now limited to 128 characters. Unfortunately
	    there is no clean way to dereference C macros from flex regular
	    expressions.

2002-08-15  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* Makefile :
	* kb/Makefile :
	* kb/atom_type.h :
	* kb/gnd_atom.c :
	* kb/gnd_atom.h :
	* kb/gnd_atomlist.c :
	* kb/gnd_atomlist.h :

	  - Removed kb files. These will be replaced by the expression
	    component.

	* ident/ident.h :
	* ident/identlist.c :
	* ident/identlist.h :
	* parser/parser.y :

	  - Added check to see if an identifier has been declared more than
	    once.

	* ident/Makefile :
	* ident/ident.c :
	* ident/ident.h :
	* ident/identlist.h :
	* ident/identlist.c :

	  - A new structure that uses simplelist to store identifiers and
	    their type.

	* symtab/Makefile :
	* symtab/ident_type.h :
	* symtab/symtab.h :
	* symtab/symtab.c :

	  - Removed. We no longer need to store symbols. Instead, we store
	    identifiers.

	* Makefile :
	* main/Makefile :
	* main/epilog.c :
	* parser/parser.y :
	* parser/scanner.l :

	  - parser now correctly stores identifiers in identifier list.

	* Makefile :
	* test/Makefile :
	* test/datastruct_test.c :

	   - Added test program for datastruct.

	* datastruct/simplelist.h :
	* datastruct/simplelist.c :

	  - Added a structure that has no internal indexing.

	* datastruct/indexedlist.c :

	  - Length now decrements when deleteing.

2002-08-13  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/langspecs :

	  - Added comment section.

	* docs/sample :

	  - Changed to new language.

	* docs/bnf.txt :
	* main/epilog.c :
	* parser/parser.h :
	* parser/parser.y :
	* parser/scanner.l :

	  - Added line number count that will get displayed on error.

	  - Added support for comments.

	  - Allowed file to be empty or have any number of statements,
	    as long as identifier declarations appear first before
	    anything else.

	* docs/bnf.txt :
	* docs/langspecs.txt :
	* docs/sample :
	* parser/parser.y :
	* parser/scanner.l :

	  - Changed language so that identifiers are all the same (ie. no
	    1-letter prefix to determine its type.

	  - Identifiers will now have to be declared first before being used
	    in an expression. Transformation identifiers and variables do not.

	* kb/gnd_atomlist.c :
	* kb/gnd_atomlist.h :

	  - Changed the definition of gnd_atomlist_type to #define.

	* main/Makefile :

	  - Made executable link against libfl instead of libl. On some systems
	    libl is not a symlink to libfl.

2002-08-11  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* symtab/Makefile :
	* symtab/ident_type.h :

	  - Added identifier types definition.

	* kb/atom_type.h
	* kb/gnd_atom.c
	* kb/gnd_atom.h
	* parser/parser.y
	* kb/atom_identifier.h :

	  - Renamed atom_identifier to atom_type.

	  - Changed atom_type from enum to macros.

	* Makefile :

	  - Added a "set -e" to prevent make from continuing after
	    an error has occured.

	* main/Makefile :

	  - Added the kb library to be linked.

	  - Do not strip in a debug build.

	* parser/Makefile :
	* parser/parser.y :
	* parser/scanner.l :

	  - Added ifdef'ed debug output.

	  - Declared union type for yylval.

	  - Added some basic yacc actions.

	* Makefile :
	* kb/gnd_atom.h :
	* kb/gnd_atomlist.c :
	* kb/gnd_atom.c :
	* kb/Makefile :
	* kb/atom_identifier.h :
	* kb/gnd_atomlist.h :

	  - Added initial revision of the knowledge base structure for
	    ground atoms.

2002-08-10  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* main/epilog.c :
	* parser/Makefile :
	* parser/parser.y :
	* parser/parser.h :

	  - Moved vars/funcs into the main file.

2002-08-09  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/sample :

	  - Added sample program.

	* datastruct/Makefile :
	* symtab/Makefile :
	* main/Makefile :

	  - Cleaned up makefiles.

	* parser/Makefile :
	* scanner.l :

	  - Instead of using lex and yacc, use flex and bison.

2002-08-08  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* parser/Makefile :
	* parser/parser.y :
	* main/Makefile :
	* main/epilog.c :
	* Makefile :

	  - Moved main function into a different file.

2002-08-07  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* docs/bnf :
	* docs/langspecs :
	* parser/parser.y :
	* parser/scanner.l :

	  - Renamed "elt" or "element" to "memb" or "member" ;
	    "cont" or "containment" to "subst" or "subset".

	* docs/bnf :
	* parser/parser.y :

	  - Took out association/parentheses from the language and parser.

2002-07-25  Vino Crescini  <jcrescin@cit.uws.edu.au>

	* ChangeLog :

	  - ChangeLog started.

	* datastruct/indexedlist.h :
	* datastruct/indexedlist.c :

	  - Some cleanups.

	  - indexedlist_add() will no longer check for double entries. This
	    is now left for the calling function to do.

	  - Added 2 functions to allow the data pointers to be freed before
	    deletion.

	* symtab/symtab.c :

	  - Changed to reflect modifications to indexedlist.

